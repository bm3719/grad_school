Parallel merge:
# data values |  qsort  |  3 proc  |  7 proc
----------------------------------------------
 50000        |  12088  |  100495  |   85498
 75000        |  17273  |  111787  |   94302
100000        |  23029  |  123164  |  106721
125000        |  29187  |  140832  |  120161
150000        |  36485  |  149309  |  129283
175000        |  42080  |  167943  |  141799
200000        |  47863  |  180317  |  159232
225000        |  54110  |  195015  |  163178
250000        |  58787  |  208792  |  170181

Parallel merge S/E
# data values |    3 proc   |    7 proc
----------------------------------------------
 50000        |   1.87/218  |   3.48/199
 75000        |   1.87/236  |   3.48/216
100000        |   1.87/249  |   3.48/223
125000        |   1.87/259  |   3.48/239
150000        |   1.87/268  |   3.48/247
175000        |   1.87/275  |   3.48/254
200000        |   1.87/282  |   3.48/260
225000        |   1.87/287  |   3.48/266
250000        |   1.87/293  |   3.48/271

Questions:
1. Speedup remains constant.
2. Speedup increases.
3. Efficiency decreases.
4. Lower.  The algorithm is inefficent because it wastes a lot of processor
   time waiting.
5. Speedup increases.  Efficiency increases for same # of processors
